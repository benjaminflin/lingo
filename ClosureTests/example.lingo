let partial_compose = fun x -> f (g x);;
let partial_compose = fun x -> id (succ x);;
let compose = Clos (fun (env, f)) -> Clos (fun (env, g) -> Clos (fun (env, x) -> env[0] (env[1] x), [env[0], g]), [f]);;

(* example 1 *)
(* let compose f g x = f (g x);;
let compose = fun f -> fun g -> fun x -> f (g x);;

(* example 2 *)
let f a b =
    let g x y = x * y + b in 
    g a (10) 
in f 20 10;;

(* example 3 *)
let f a b =
    let g x y = x * y + b in 
    g a (10)
in f 20;;