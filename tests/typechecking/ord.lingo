data Ordering where
  LT : Ordering;
  GT : Ordering;
  EQ : Ordering; 

data Eq a where
  Eq : (a -> a -> Bool) -> Eq a;

data Ord a where
  Ord : Eq a -> (a -> a -> Ordering) -> Ord a;

lessThan t o x y : @a Ord a -> a -> a -> Bool 
  = case o of
    Ord e f -> (case f x y of 
      LT -> true;
      _  -> false;
    : Bool)
  ;
; 