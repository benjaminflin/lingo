; ModuleID = 'lingo'
source_filename = "lingo"

%clos = type { i8*, i8** }

define i1* @__prim__not(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i1
  %arg_ptr = bitcast i8* %0 to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %call_arg_ptr
  %call_arg = load i1, i1* %call_arg_ptr
  %call_ret = call i1 @__prim__unop__not(i1 %call_arg)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define i64* @__prim__neg(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %call_arg = load i64, i64* %call_arg_ptr
  %call_ret = call i64 @__prim__unop__neg(i64 %call_arg)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__or(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__or1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i1*
  %arg_ptr = bitcast i8* %0 to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %closarg_ptr
  %raw_arg_ptr = bitcast i1* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__or1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i1
  %call_arg_ptr1 = alloca i1
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i1*
  %arg3 = load i1, i1* %arg_ptr2
  store i1 %arg3, i1* %call_arg_ptr1
  %call_arg = load i1, i1* %call_arg_ptr
  %call_arg4 = load i1, i1* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__or(i1 %call_arg, i1 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__and(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__and1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i1*
  %arg_ptr = bitcast i8* %0 to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %closarg_ptr
  %raw_arg_ptr = bitcast i1* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__and1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i1
  %call_arg_ptr1 = alloca i1
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i1*
  %arg3 = load i1, i1* %arg_ptr2
  store i1 %arg3, i1* %call_arg_ptr1
  %call_arg = load i1, i1* %call_arg_ptr
  %call_arg4 = load i1, i1* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__and(i1 %call_arg, i1 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__neq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__neq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__neq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__neq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__lt(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__lt1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__lt1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__lt(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__leq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__leq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__leq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__leq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__eq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__eq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__eq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__eq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__gt(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__gt1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__gt1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__gt(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__geq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__geq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__geq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__geq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__divide(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__divide1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__divide1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__divide(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__times(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__times1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__times1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__times(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__minus(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__minus1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__minus1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__minus(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__plus(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__plus1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__plus1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__plus(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define i64* @__print_int__(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %call_arg = load i64, i64* %call_arg_ptr
  %call_ret = call i64 @print_int(i64 %call_arg)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define i64* @f(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %ifcond = alloca i1
  %app_lhs54 = alloca %clos
  %app_lhs55 = alloca %clos
  %clos_fn_ptr56 = getelementptr inbounds %clos, %clos* %app_lhs55, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @__prim__eq to i8*), i8** %clos_fn_ptr56
  %malloccall57 = tail call i8* @malloc(i32 0)
  %env_aloc58 = bitcast i8* %malloccall57 to [0 x i8*]*
  %env59 = getelementptr inbounds %clos, %clos* %app_lhs55, i32 0, i32 1
  %env_ptr_raw60 = bitcast [0 x i8*]* %env_aloc58 to i8**
  store i8** %env_ptr_raw60, i8*** %env59
  %app_rhs61 = alloca i64
  %arg_ptr62 = bitcast i8* %0 to i64*
  %arg63 = load i64, i64* %arg_ptr62
  store i64 %arg63, i64* %app_rhs61
  %raw_app_rhs64 = bitcast i64* %app_rhs61 to i8*
  %raw_fn_ptr_ptr65 = getelementptr inbounds %clos, %clos* %app_lhs55, i32 0, i32 0
  %raw_fn_ptr66 = load i8*, i8** %raw_fn_ptr_ptr65
  %fn_ptr67 = bitcast i8* %raw_fn_ptr66 to %clos* (i8*, i8**)*
  %args_ptr68 = getelementptr inbounds %clos, %clos* %app_lhs55, i32 0, i32 1
  %args69 = load i8**, i8*** %args_ptr68
  %app_res_ptr70 = call %clos* %fn_ptr67(i8* %raw_app_rhs64, i8** %args69)
  %app_res71 = load %clos, %clos* %app_res_ptr70
  store %clos %app_res71, %clos* %app_lhs54
  %app_rhs72 = alloca i64
  store i64 0, i64* %app_rhs72
  %raw_app_rhs73 = bitcast i64* %app_rhs72 to i8*
  %raw_fn_ptr_ptr74 = getelementptr inbounds %clos, %clos* %app_lhs54, i32 0, i32 0
  %raw_fn_ptr75 = load i8*, i8** %raw_fn_ptr_ptr74
  %fn_ptr76 = bitcast i8* %raw_fn_ptr75 to i1* (i8*, i8**)*
  %args_ptr77 = getelementptr inbounds %clos, %clos* %app_lhs54, i32 0, i32 1
  %args78 = load i8**, i8*** %args_ptr77
  %app_res_ptr79 = call i1* %fn_ptr76(i8* %raw_app_rhs73, i8** %args78)
  %app_res80 = load i1, i1* %app_res_ptr79
  store i1 %app_res80, i1* %ifcond
  %cond_val = load i1, i1* %ifcond
  br i1 %cond_val, label %brtrue, label %brfalse

brtrue:                                           ; preds = %entry
  store i64 1, i64* %rval_ptr
  br label %end

brfalse:                                          ; preds = %entry
  %app_lhs = alloca %clos
  %app_lhs1 = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @__prim__times to i8*), i8** %clos_fn_ptr
  %malloccall2 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall2 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs = alloca i64
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %app_rhs
  %raw_app_rhs = bitcast i64* %app_rhs to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %clos* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %clos* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %clos, %clos* %app_res_ptr
  store %clos %app_res, %clos* %app_lhs
  %app_rhs3 = alloca i64
  %app_lhs4 = alloca %clos
  %clos_fn_ptr5 = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @f to i8*), i8** %clos_fn_ptr5
  %malloccall6 = tail call i8* @malloc(i32 0)
  %env_aloc7 = bitcast i8* %malloccall6 to [0 x i8*]*
  %env8 = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 1
  %env_ptr_raw9 = bitcast [0 x i8*]* %env_aloc7 to i8**
  store i8** %env_ptr_raw9, i8*** %env8
  %app_rhs10 = alloca i64
  %app_lhs11 = alloca %clos
  %app_lhs12 = alloca %clos
  %clos_fn_ptr13 = getelementptr inbounds %clos, %clos* %app_lhs12, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @__prim__minus to i8*), i8** %clos_fn_ptr13
  %malloccall14 = tail call i8* @malloc(i32 0)
  %env_aloc15 = bitcast i8* %malloccall14 to [0 x i8*]*
  %env16 = getelementptr inbounds %clos, %clos* %app_lhs12, i32 0, i32 1
  %env_ptr_raw17 = bitcast [0 x i8*]* %env_aloc15 to i8**
  store i8** %env_ptr_raw17, i8*** %env16
  %app_rhs18 = alloca i64
  %arg_ptr19 = bitcast i8* %0 to i64*
  %arg20 = load i64, i64* %arg_ptr19
  store i64 %arg20, i64* %app_rhs18
  %raw_app_rhs21 = bitcast i64* %app_rhs18 to i8*
  %raw_fn_ptr_ptr22 = getelementptr inbounds %clos, %clos* %app_lhs12, i32 0, i32 0
  %raw_fn_ptr23 = load i8*, i8** %raw_fn_ptr_ptr22
  %fn_ptr24 = bitcast i8* %raw_fn_ptr23 to %clos* (i8*, i8**)*
  %args_ptr25 = getelementptr inbounds %clos, %clos* %app_lhs12, i32 0, i32 1
  %args26 = load i8**, i8*** %args_ptr25
  %app_res_ptr27 = call %clos* %fn_ptr24(i8* %raw_app_rhs21, i8** %args26)
  %app_res28 = load %clos, %clos* %app_res_ptr27
  store %clos %app_res28, %clos* %app_lhs11
  %app_rhs29 = alloca i64
  store i64 1, i64* %app_rhs29
  %raw_app_rhs30 = bitcast i64* %app_rhs29 to i8*
  %raw_fn_ptr_ptr31 = getelementptr inbounds %clos, %clos* %app_lhs11, i32 0, i32 0
  %raw_fn_ptr32 = load i8*, i8** %raw_fn_ptr_ptr31
  %fn_ptr33 = bitcast i8* %raw_fn_ptr32 to i64* (i8*, i8**)*
  %args_ptr34 = getelementptr inbounds %clos, %clos* %app_lhs11, i32 0, i32 1
  %args35 = load i8**, i8*** %args_ptr34
  %app_res_ptr36 = call i64* %fn_ptr33(i8* %raw_app_rhs30, i8** %args35)
  %app_res37 = load i64, i64* %app_res_ptr36
  store i64 %app_res37, i64* %app_rhs10
  %raw_app_rhs38 = bitcast i64* %app_rhs10 to i8*
  %raw_fn_ptr_ptr39 = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 0
  %raw_fn_ptr40 = load i8*, i8** %raw_fn_ptr_ptr39
  %fn_ptr41 = bitcast i8* %raw_fn_ptr40 to i64* (i8*, i8**)*
  %args_ptr42 = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 1
  %args43 = load i8**, i8*** %args_ptr42
  %app_res_ptr44 = call i64* %fn_ptr41(i8* %raw_app_rhs38, i8** %args43)
  %app_res45 = load i64, i64* %app_res_ptr44
  store i64 %app_res45, i64* %app_rhs3
  %raw_app_rhs46 = bitcast i64* %app_rhs3 to i8*
  %raw_fn_ptr_ptr47 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr48 = load i8*, i8** %raw_fn_ptr_ptr47
  %fn_ptr49 = bitcast i8* %raw_fn_ptr48 to i64* (i8*, i8**)*
  %args_ptr50 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args51 = load i8**, i8*** %args_ptr50
  %app_res_ptr52 = call i64* %fn_ptr49(i8* %raw_app_rhs46, i8** %args51)
  %app_res53 = load i64, i64* %app_res_ptr52
  store i64 %app_res53, i64* %rval_ptr
  br label %end

end:                                              ; preds = %brfalse, %brtrue
  ret i64* %rval_ptr
}

declare i1 @__prim__unop__not(i1)

declare i64 @__prim__unop__neg(i64)

declare i1 @__prim__binop__or(i1, i1)

declare i1 @__prim__binop__and(i1, i1)

declare i1 @__prim__binop__neq(i64, i64)

declare i1 @__prim__binop__lt(i64, i64)

declare i1 @__prim__binop__leq(i64, i64)

declare i1 @__prim__binop__eq(i64, i64)

declare i1 @__prim__binop__gt(i64, i64)

declare i1 @__prim__binop__geq(i64, i64)

declare i64 @__prim__binop__divide(i64, i64)

declare i64 @__prim__binop__times(i64, i64)

declare i64 @__prim__binop__minus(i64, i64)

declare i64 @__prim__binop__plus(i64, i64)

declare i64 @print_int(i64)

declare noalias i8* @malloc(i32)

define i64 @main() {
entry:
  %ret = alloca i64
  %app_lhs = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__print_int__ to i8*), i8** %clos_fn_ptr
  %malloccall = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs = alloca i64
  %app_lhs1 = alloca %clos
  %clos_fn_ptr2 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @f to i8*), i8** %clos_fn_ptr2
  %malloccall3 = tail call i8* @malloc(i32 0)
  %env_aloc4 = bitcast i8* %malloccall3 to [0 x i8*]*
  %env5 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %env_ptr_raw6 = bitcast [0 x i8*]* %env_aloc4 to i8**
  store i8** %env_ptr_raw6, i8*** %env5
  %app_rhs7 = alloca i64
  store i64 5, i64* %app_rhs7
  %raw_app_rhs = bitcast i64* %app_rhs7 to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to i64* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call i64* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load i64, i64* %app_res_ptr
  store i64 %app_res, i64* %app_rhs
  %raw_app_rhs8 = bitcast i64* %app_rhs to i8*
  %raw_fn_ptr_ptr9 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr10 = load i8*, i8** %raw_fn_ptr_ptr9
  %fn_ptr11 = bitcast i8* %raw_fn_ptr10 to i64* (i8*, i8**)*
  %args_ptr12 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args13 = load i8**, i8*** %args_ptr12
  %app_res_ptr14 = call i64* %fn_ptr11(i8* %raw_app_rhs8, i8** %args13)
  %app_res15 = load i64, i64* %app_res_ptr14
  store i64 %app_res15, i64* %ret
  %retval = load i64, i64* %ret
  ret i64 %retval
}

