; ModuleID = 'lingo'
source_filename = "lingo"

%clos = type { i8*, i8** }
%adt = type { i64, i8* }
%Just = type { i8* }

define i1* @__prim__not(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i1
  %arg_ptr = bitcast i8* %0 to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %call_arg_ptr
  %call_arg = load i1, i1* %call_arg_ptr
  %call_ret = call i1 @__prim__unop__not(i1 %call_arg)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define i64* @__prim__neg(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %call_arg = load i64, i64* %call_arg_ptr
  %call_ret = call i64 @__prim__unop__neg(i64 %call_arg)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__or(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__or1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i1*
  %arg_ptr = bitcast i8* %0 to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %closarg_ptr
  %raw_arg_ptr = bitcast i1* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__or1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i1
  %call_arg_ptr1 = alloca i1
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i1*
  %arg3 = load i1, i1* %arg_ptr2
  store i1 %arg3, i1* %call_arg_ptr1
  %call_arg = load i1, i1* %call_arg_ptr
  %call_arg4 = load i1, i1* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__or(i1 %call_arg, i1 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__and(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__and1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i1*
  %arg_ptr = bitcast i8* %0 to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %closarg_ptr
  %raw_arg_ptr = bitcast i1* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__and1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i1
  %call_arg_ptr1 = alloca i1
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i1*
  %arg3 = load i1, i1* %arg_ptr2
  store i1 %arg3, i1* %call_arg_ptr1
  %call_arg = load i1, i1* %call_arg_ptr
  %call_arg4 = load i1, i1* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__and(i1 %call_arg, i1 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__neq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__neq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__neq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__neq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__lt(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__lt1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__lt1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__lt(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__leq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__leq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__leq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__leq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__eq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__eq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__eq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__eq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__gt(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__gt1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__gt1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__gt(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__geq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__geq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__geq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__geq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__divide(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__divide1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__divide1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__divide(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__times(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__times1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__times1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__times(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__minus(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__minus1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__minus1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__minus(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__plus(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__plus1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__plus1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__plus(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define i64* @__print_int__(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %call_arg = load i64, i64* %call_arg_ptr
  %call_ret = call i64 @print_int(i64 %call_arg)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %adt* @foo(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %app_lhs = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @Just to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall1 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs = alloca i8*
  %unbox = alloca i64
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %unbox
  %box = bitcast i64* %unbox to i8*
  store i8* %box, i8** %app_rhs
  %raw_app_rhs = bitcast i8** %app_rhs to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %adt* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %adt* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %adt, %adt* %app_res_ptr
  store %adt %app_res, %adt* %rval_ptr
  ret %adt* %rval_ptr
}

define i64* @"foo'"(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %scrut = alloca %adt
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %scrut
  %switch_tag_ptr = getelementptr inbounds %adt, %adt* %scrut, i32 0, i32 0
  %scrut_data = getelementptr inbounds %adt, %adt* %scrut, i32 0, i32 1
  %switch_tag = load i64, i64* %switch_tag_ptr
  switch i64 %switch_tag, label %default [
    i64 0, label %case
  ]

default:                                          ; preds = %entry
  store i64 0, i64* %rval_ptr
  br label %case_continue

case:                                             ; preds = %entry
  %scrut_data_deref = load i8*, i8** %scrut_data
  %cons_cast = bitcast i8* %scrut_data_deref to %Just*
  %cons_destruct_ptr = getelementptr inbounds %Just, %Just* %cons_cast, i32 0, i32 0
  %cons_destruct = load i8*, i8** %cons_destruct_ptr
  %boxed = alloca i8*
  store i8* %cons_destruct, i8** %boxed
  %unbox_ptr_ptr = bitcast i8** %boxed to i64**
  %unbox_ptr = load i64*, i64** %unbox_ptr_ptr
  %unbox_val = load i64, i64* %unbox_ptr
  store i64 %unbox_val, i64* %rval_ptr
  br label %case_continue

case_continue:                                    ; preds = %case, %default
  ret i64* %rval_ptr
}

define %adt* @Just(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %carg_aloc = bitcast i8* %malloccall1 to i8**
  %arg_ptr = bitcast i8* %0 to i8**
  %arg = load i8*, i8** %arg_ptr
  store i8* %arg, i8** %carg_aloc
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %cons = bitcast i8* %malloccall2 to %Just*
  %carg_aloc_val = load i8*, i8** %carg_aloc
  %carg = getelementptr inbounds %Just, %Just* %cons, i32 0, i32 0
  store i8* %carg_aloc_val, i8** %carg
  %cons_vptr = bitcast %Just* %cons to i8*
  %tag = getelementptr inbounds %adt, %adt* %rval_ptr, i32 0, i32 0
  %data_ptr = getelementptr inbounds %adt, %adt* %rval_ptr, i32 0, i32 1
  store i64 0, i64* %tag
  store i8* %cons_vptr, i8** %data_ptr
  ret %adt* %rval_ptr
}

declare i1 @__prim__unop__not(i1)

declare i64 @__prim__unop__neg(i64)

declare i1 @__prim__binop__or(i1, i1)

declare i1 @__prim__binop__and(i1, i1)

declare i1 @__prim__binop__neq(i64, i64)

declare i1 @__prim__binop__lt(i64, i64)

declare i1 @__prim__binop__leq(i64, i64)

declare i1 @__prim__binop__eq(i64, i64)

declare i1 @__prim__binop__gt(i64, i64)

declare i1 @__prim__binop__geq(i64, i64)

declare i64 @__prim__binop__divide(i64, i64)

declare i64 @__prim__binop__times(i64, i64)

declare i64 @__prim__binop__minus(i64, i64)

declare i64 @__prim__binop__plus(i64, i64)

declare i64 @print_int(i64)

declare noalias i8* @malloc(i32)

define i64 @main() {
entry:
  %ret = alloca i64
  %app_lhs = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__print_int__ to i8*), i8** %clos_fn_ptr
  %malloccall = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs = alloca i64
  %app_lhs1 = alloca %clos
  %clos_fn_ptr2 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @"foo'" to i8*), i8** %clos_fn_ptr2
  %malloccall3 = tail call i8* @malloc(i32 0)
  %env_aloc4 = bitcast i8* %malloccall3 to [0 x i8*]*
  %env5 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %env_ptr_raw6 = bitcast [0 x i8*]* %env_aloc4 to i8**
  store i8** %env_ptr_raw6, i8*** %env5
  %app_rhs7 = alloca %adt
  %app_lhs8 = alloca %clos
  %clos_fn_ptr9 = getelementptr inbounds %clos, %clos* %app_lhs8, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @Just to i8*), i8** %clos_fn_ptr9
  %malloccall10 = tail call i8* @malloc(i32 0)
  %env_aloc11 = bitcast i8* %malloccall10 to [0 x i8*]*
  %env12 = getelementptr inbounds %clos, %clos* %app_lhs8, i32 0, i32 1
  %env_ptr_raw13 = bitcast [0 x i8*]* %env_aloc11 to i8**
  store i8** %env_ptr_raw13, i8*** %env12
  %app_rhs14 = alloca i8*
  %unbox = alloca i64
  store i64 1, i64* %unbox
  %box = bitcast i64* %unbox to i8*
  store i8* %box, i8** %app_rhs14
  %raw_app_rhs = bitcast i8** %app_rhs14 to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs8, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %adt* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs8, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %adt* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %adt, %adt* %app_res_ptr
  store %adt %app_res, %adt* %app_rhs7
  %raw_app_rhs15 = bitcast %adt* %app_rhs7 to i8*
  %raw_fn_ptr_ptr16 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  %raw_fn_ptr17 = load i8*, i8** %raw_fn_ptr_ptr16
  %fn_ptr18 = bitcast i8* %raw_fn_ptr17 to i64* (i8*, i8**)*
  %args_ptr19 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %args20 = load i8**, i8*** %args_ptr19
  %app_res_ptr21 = call i64* %fn_ptr18(i8* %raw_app_rhs15, i8** %args20)
  %app_res22 = load i64, i64* %app_res_ptr21
  store i64 %app_res22, i64* %app_rhs
  %raw_app_rhs23 = bitcast i64* %app_rhs to i8*
  %raw_fn_ptr_ptr24 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr25 = load i8*, i8** %raw_fn_ptr_ptr24
  %fn_ptr26 = bitcast i8* %raw_fn_ptr25 to i64* (i8*, i8**)*
  %args_ptr27 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args28 = load i8**, i8*** %args_ptr27
  %app_res_ptr29 = call i64* %fn_ptr26(i8* %raw_app_rhs23, i8** %args28)
  %app_res30 = load i64, i64* %app_res_ptr29
  store i64 %app_res30, i64* %ret
  %retval = load i64, i64* %ret
  ret i64 %retval
}

