; ModuleID = 'lingo'
source_filename = "lingo"

%clos = type { i8*, i8** }
%adt = type { i64, i8* }
%C = type { i8, %adt }
%E = type {}

define i1* @__prim__not(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i1
  %arg_ptr = bitcast i8* %0 to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %call_arg_ptr
  %call_arg = load i1, i1* %call_arg_ptr
  %call_ret = call i1 @__prim__unop__not(i1 %call_arg)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define i64* @__prim__neg(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %call_arg = load i64, i64* %call_arg_ptr
  %call_ret = call i64 @__prim__unop__neg(i64 %call_arg)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__or(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__or1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i1*
  %arg_ptr = bitcast i8* %0 to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %closarg_ptr
  %raw_arg_ptr = bitcast i1* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__or1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i1
  %call_arg_ptr1 = alloca i1
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i1*
  %arg3 = load i1, i1* %arg_ptr2
  store i1 %arg3, i1* %call_arg_ptr1
  %call_arg = load i1, i1* %call_arg_ptr
  %call_arg4 = load i1, i1* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__or(i1 %call_arg, i1 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__and(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__and1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i1*
  %arg_ptr = bitcast i8* %0 to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %closarg_ptr
  %raw_arg_ptr = bitcast i1* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__and1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i1
  %call_arg_ptr1 = alloca i1
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i1*
  %arg = load i1, i1* %arg_ptr
  store i1 %arg, i1* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i1*
  %arg3 = load i1, i1* %arg_ptr2
  store i1 %arg3, i1* %call_arg_ptr1
  %call_arg = load i1, i1* %call_arg_ptr
  %call_arg4 = load i1, i1* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__and(i1 %call_arg, i1 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__neq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__neq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__neq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__neq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__lt(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__lt1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__lt1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__lt(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__leq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__leq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__leq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__leq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__eq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__eq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__eq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__eq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__gt(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__gt1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__gt1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__gt(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__geq(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i1* (i8*, i8**)* @__prim__geq1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i1* @__prim__geq1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1* getelementptr (i1, i1* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i1*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i1 @__prim__binop__geq(i64 %call_arg, i64 %call_arg4)
  store i1 %call_ret, i1* %rval_ptr
  ret i1* %rval_ptr
}

define %clos* @__prim__divide(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__divide1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__divide1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__divide(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__times(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__times1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__times1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__times(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__minus(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__minus1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__minus1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__minus(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__prim__plus(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @__prim__plus1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @__prim__plus1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %call_arg_ptr1 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %arg_ptr2 = bitcast i8* %0 to i64*
  %arg3 = load i64, i64* %arg_ptr2
  store i64 %arg3, i64* %call_arg_ptr1
  %call_arg = load i64, i64* %call_arg_ptr
  %call_arg4 = load i64, i64* %call_arg_ptr1
  %call_ret = call i64 @__prim__binop__plus(i64 %call_arg, i64 %call_arg4)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %adt* @__prim_alloc__(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %call_arg_ptr = alloca i64
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %call_arg = load i64, i64* %call_arg_ptr
  %call_ret = call %adt @prim_alloc(i64 %call_arg)
  store %adt %call_ret, %adt* %rval_ptr
  ret %adt* %rval_ptr
}

define %adt* @__prim_drop__(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %call_arg_ptr = alloca %adt
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %call_arg_ptr
  %call_arg = load %adt, %adt* %call_arg_ptr
  %call_ret = call %adt @prim_drop(%adt %call_arg)
  store %adt %call_ret, %adt* %rval_ptr
  ret %adt* %rval_ptr
}

define %adt* @__print_string__(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %call_arg_ptr = alloca %adt
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %call_arg_ptr
  %call_arg = load %adt, %adt* %call_arg_ptr
  %call_ret = call %adt @print_string(%adt %call_arg)
  store %adt %call_ret, %adt* %rval_ptr
  ret %adt* %rval_ptr
}

define i64* @__print_int__(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %call_arg_ptr = alloca i64
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %call_arg_ptr
  %call_arg = load i64, i64* %call_arg_ptr
  %call_ret = call i64 @print_int(i64 %call_arg)
  store i64 %call_ret, i64* %rval_ptr
  ret i64* %rval_ptr
}

define %clos* @__set_bit__(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @__set_bit__1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to %adt*
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %closarg_ptr
  %raw_arg_ptr = bitcast %adt* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %clos* @__set_bit__1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @__set_bit__2 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [2 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [2 x i8*], [2 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %raw_closarg_ptr_ptr3 = getelementptr inbounds [2 x i8*], [2 x i8*]* %env_aloc, i32 0, i32 1
  %malloccall4 = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %closarg_ptr5 = bitcast i8* %malloccall4 to %adt*
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr6 = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr7 = bitcast i8* %raw_arg_ptr6 to %adt*
  %arg8 = load %adt, %adt* %arg_ptr7
  store %adt %arg8, %adt* %closarg_ptr5
  %raw_arg_ptr9 = bitcast %adt* %closarg_ptr5 to i8*
  store i8* %raw_arg_ptr9, i8** %raw_closarg_ptr_ptr3
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [2 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %adt* @__set_bit__2(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %call_arg_ptr = alloca %adt
  %call_arg_ptr1 = alloca i64
  %call_arg_ptr2 = alloca i8
  %arg_gep_ptr = bitcast i8** %1 to [2 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [2 x i8*], [2 x i8*]* %arg_gep_ptr, i32 0, i32 1
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %call_arg_ptr
  %arg_gep_ptr3 = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr4 = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr3, i32 0, i32 0
  %raw_arg_ptr5 = load i8*, i8** %raw_arg_ptr_ptr4
  %arg_ptr6 = bitcast i8* %raw_arg_ptr5 to i64*
  %arg7 = load i64, i64* %arg_ptr6
  store i64 %arg7, i64* %call_arg_ptr1
  %arg8 = load i8, i8* %0
  store i8 %arg8, i8* %call_arg_ptr2
  %call_arg = load %adt, %adt* %call_arg_ptr
  %call_arg9 = load i64, i64* %call_arg_ptr1
  %call_arg10 = load i8, i8* %call_arg_ptr2
  %call_ret = call %adt @set_bit(%adt %call_arg, i64 %call_arg9, i8 %call_arg10)
  store %adt %call_ret, %adt* %rval_ptr
  ret %adt* %rval_ptr
}

define %clos* @len(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i64* (i8*, i8**)* @fn_len to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall1 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %clos* @alloc(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @fn_alloc to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall1 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %clos* @drop(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @__prim_drop__ to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall1 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %clos* @"stringToMem'"(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @"fn_stringToMem'" to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall1 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %clos* @stringToMem(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @fn_stringToMem to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall1 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %clos* @printAndDrop(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @fn_printAndDrop to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall1 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %clos* @const(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @fn_const to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall1 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i64* @fn_len(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i64*
  %scrut = alloca %adt
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %scrut
  %switch_tag_ptr = getelementptr inbounds %adt, %adt* %scrut, i32 0, i32 0
  %scrut_data = getelementptr inbounds %adt, %adt* %scrut, i32 0, i32 1
  %switch_tag = load i64, i64* %switch_tag_ptr
  switch i64 %switch_tag, label %default [
    i64 1, label %case
  ]

default:                                          ; preds = %entry
  store i64 0, i64* %rval_ptr
  br label %case_continue

case:                                             ; preds = %entry
  %scrut_data_deref = load i8*, i8** %scrut_data
  %cons_cast = bitcast i8* %scrut_data_deref to %C*
  %cons_destruct_ptr = getelementptr inbounds %C, %C* %cons_cast, i32 0, i32 0
  %cons_destruct = load i8, i8* %cons_destruct_ptr
  %cons_destruct_ptr1 = getelementptr inbounds %C, %C* %cons_cast, i32 0, i32 1
  %cons_destruct2 = load %adt, %adt* %cons_destruct_ptr1
  %app_lhs = alloca %clos
  %app_lhs3 = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs3, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @__prim__plus to i8*), i8** %clos_fn_ptr
  %malloccall4 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall4 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs3, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs = alloca i64
  store i64 1, i64* %app_rhs
  %raw_app_rhs = bitcast i64* %app_rhs to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs3, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %clos* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs3, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %clos* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %clos, %clos* %app_res_ptr
  store %clos %app_res, %clos* %app_lhs
  %app_rhs5 = alloca i64
  %app_lhs6 = alloca %clos
  %app_lhs7 = alloca %clos
  %clos_fn_ptr8 = getelementptr inbounds %clos, %clos* %app_lhs7, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @len to i8*), i8** %clos_fn_ptr8
  %malloccall9 = tail call i8* @malloc(i32 0)
  %env_aloc10 = bitcast i8* %malloccall9 to [0 x i8*]*
  %env11 = getelementptr inbounds %clos, %clos* %app_lhs7, i32 0, i32 1
  %env_ptr_raw12 = bitcast [0 x i8*]* %env_aloc10 to i8**
  store i8** %env_ptr_raw12, i8*** %env11
  %app_rhs13 = alloca i64
  store i64 0, i64* %app_rhs13
  %raw_app_rhs14 = bitcast i64* %app_rhs13 to i8*
  %raw_fn_ptr_ptr15 = getelementptr inbounds %clos, %clos* %app_lhs7, i32 0, i32 0
  %raw_fn_ptr16 = load i8*, i8** %raw_fn_ptr_ptr15
  %fn_ptr17 = bitcast i8* %raw_fn_ptr16 to %clos* (i8*, i8**)*
  %args_ptr18 = getelementptr inbounds %clos, %clos* %app_lhs7, i32 0, i32 1
  %args19 = load i8**, i8*** %args_ptr18
  %app_res_ptr20 = call %clos* %fn_ptr17(i8* %raw_app_rhs14, i8** %args19)
  %app_res21 = load %clos, %clos* %app_res_ptr20
  store %clos %app_res21, %clos* %app_lhs6
  %app_rhs22 = alloca %adt
  store %adt %cons_destruct2, %adt* %app_rhs22
  %raw_app_rhs23 = bitcast %adt* %app_rhs22 to i8*
  %raw_fn_ptr_ptr24 = getelementptr inbounds %clos, %clos* %app_lhs6, i32 0, i32 0
  %raw_fn_ptr25 = load i8*, i8** %raw_fn_ptr_ptr24
  %fn_ptr26 = bitcast i8* %raw_fn_ptr25 to i64* (i8*, i8**)*
  %args_ptr27 = getelementptr inbounds %clos, %clos* %app_lhs6, i32 0, i32 1
  %args28 = load i8**, i8*** %args_ptr27
  %app_res_ptr29 = call i64* %fn_ptr26(i8* %raw_app_rhs23, i8** %args28)
  %app_res30 = load i64, i64* %app_res_ptr29
  store i64 %app_res30, i64* %app_rhs5
  %raw_app_rhs31 = bitcast i64* %app_rhs5 to i8*
  %raw_fn_ptr_ptr32 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr33 = load i8*, i8** %raw_fn_ptr_ptr32
  %fn_ptr34 = bitcast i8* %raw_fn_ptr33 to i64* (i8*, i8**)*
  %args_ptr35 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args36 = load i8**, i8*** %args_ptr35
  %app_res_ptr37 = call i64* %fn_ptr34(i8* %raw_app_rhs31, i8** %args36)
  %app_res38 = load i64, i64* %app_res_ptr37
  store i64 %app_res38, i64* %rval_ptr
  br label %case_continue

case_continue:                                    ; preds = %case, %default
  ret i64* %rval_ptr
}

define %clos* @fn_alloc(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @fn_alloc1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i64*
  %arg_ptr = bitcast i8* %0 to i64*
  %arg = load i64, i64* %arg_ptr
  store i64 %arg, i64* %closarg_ptr
  %raw_arg_ptr = bitcast i64* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %adt* @fn_alloc1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %app_lhs = alloca %clos
  %arg_ptr = bitcast i8* %0 to %clos*
  %arg = load %clos, %clos* %arg_ptr
  store %clos %arg, %clos* %app_lhs
  %app_rhs = alloca %adt
  %app_lhs1 = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @__prim_alloc__ to i8*), i8** %clos_fn_ptr
  %malloccall2 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall2 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs3 = alloca i64
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr4 = bitcast i8* %raw_arg_ptr to i64*
  %arg5 = load i64, i64* %arg_ptr4
  store i64 %arg5, i64* %app_rhs3
  %raw_app_rhs = bitcast i64* %app_rhs3 to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %adt* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %adt* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %adt, %adt* %app_res_ptr
  store %adt %app_res, %adt* %app_rhs
  %raw_app_rhs6 = bitcast %adt* %app_rhs to i8*
  %raw_fn_ptr_ptr7 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr8 = load i8*, i8** %raw_fn_ptr_ptr7
  %fn_ptr9 = bitcast i8* %raw_fn_ptr8 to %adt* (i8*, i8**)*
  %args_ptr10 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args11 = load i8**, i8*** %args_ptr10
  %app_res_ptr12 = call %adt* %fn_ptr9(i8* %raw_app_rhs6, i8** %args11)
  %app_res13 = load %adt, %adt* %app_res_ptr12
  store %adt %app_res13, %adt* %rval_ptr
  ret %adt* %rval_ptr
}

define %clos* @"fn_stringToMem'"(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @"fn_stringToMem'1" to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to %adt*
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %closarg_ptr
  %raw_arg_ptr = bitcast %adt* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %clos* @"fn_stringToMem'1"(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @"fn_stringToMem'2" to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [2 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [2 x i8*], [2 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to %adt*
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %closarg_ptr
  %raw_arg_ptr = bitcast %adt* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %raw_closarg_ptr_ptr3 = getelementptr inbounds [2 x i8*], [2 x i8*]* %env_aloc, i32 0, i32 1
  %malloccall4 = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %closarg_ptr5 = bitcast i8* %malloccall4 to %adt*
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr6 = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr7 = bitcast i8* %raw_arg_ptr6 to %adt*
  %arg8 = load %adt, %adt* %arg_ptr7
  store %adt %arg8, %adt* %closarg_ptr5
  %raw_arg_ptr9 = bitcast %adt* %closarg_ptr5 to i8*
  store i8* %raw_arg_ptr9, i8** %raw_closarg_ptr_ptr3
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [2 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %adt* @"fn_stringToMem'2"(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %scrut = alloca %adt
  %arg_gep_ptr = bitcast i8** %1 to [2 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [2 x i8*], [2 x i8*]* %arg_gep_ptr, i32 0, i32 1
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %scrut
  %switch_tag_ptr = getelementptr inbounds %adt, %adt* %scrut, i32 0, i32 0
  %scrut_data = getelementptr inbounds %adt, %adt* %scrut, i32 0, i32 1
  %switch_tag = load i64, i64* %switch_tag_ptr
  switch i64 %switch_tag, label %default [
    i64 1, label %case
  ]

default:                                          ; preds = %entry
  %app_lhs = alloca %clos
  %app_lhs1 = alloca %clos
  %app_lhs2 = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @__set_bit__ to i8*), i8** %clos_fn_ptr
  %malloccall3 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall3 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs = alloca %adt
  %arg_gep_ptr4 = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr5 = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr4, i32 0, i32 0
  %raw_arg_ptr6 = load i8*, i8** %raw_arg_ptr_ptr5
  %arg_ptr7 = bitcast i8* %raw_arg_ptr6 to %adt*
  %arg8 = load %adt, %adt* %arg_ptr7
  store %adt %arg8, %adt* %app_rhs
  %raw_app_rhs = bitcast %adt* %app_rhs to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %clos* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %clos* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %clos, %clos* %app_res_ptr
  store %clos %app_res, %clos* %app_lhs1
  %app_rhs9 = alloca i64
  %arg_ptr10 = bitcast i8* %0 to i64*
  %arg11 = load i64, i64* %arg_ptr10
  store i64 %arg11, i64* %app_rhs9
  %raw_app_rhs12 = bitcast i64* %app_rhs9 to i8*
  %raw_fn_ptr_ptr13 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  %raw_fn_ptr14 = load i8*, i8** %raw_fn_ptr_ptr13
  %fn_ptr15 = bitcast i8* %raw_fn_ptr14 to %clos* (i8*, i8**)*
  %args_ptr16 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %args17 = load i8**, i8*** %args_ptr16
  %app_res_ptr18 = call %clos* %fn_ptr15(i8* %raw_app_rhs12, i8** %args17)
  %app_res19 = load %clos, %clos* %app_res_ptr18
  store %clos %app_res19, %clos* %app_lhs
  %app_rhs20 = alloca i8
  store i8 0, i8* %app_rhs20
  %raw_fn_ptr_ptr21 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr22 = load i8*, i8** %raw_fn_ptr_ptr21
  %fn_ptr23 = bitcast i8* %raw_fn_ptr22 to %adt* (i8*, i8**)*
  %args_ptr24 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args25 = load i8**, i8*** %args_ptr24
  %app_res_ptr26 = call %adt* %fn_ptr23(i8* %app_rhs20, i8** %args25)
  %app_res27 = load %adt, %adt* %app_res_ptr26
  store %adt %app_res27, %adt* %rval_ptr
  br label %case_continue

case:                                             ; preds = %entry
  %scrut_data_deref = load i8*, i8** %scrut_data
  %cons_cast = bitcast i8* %scrut_data_deref to %C*
  %cons_destruct_ptr = getelementptr inbounds %C, %C* %cons_cast, i32 0, i32 0
  %cons_destruct = load i8, i8* %cons_destruct_ptr
  %cons_destruct_ptr28 = getelementptr inbounds %C, %C* %cons_cast, i32 0, i32 1
  %cons_destruct29 = load %adt, %adt* %cons_destruct_ptr28
  %app_lhs30 = alloca %clos
  %app_lhs31 = alloca %clos
  %app_lhs32 = alloca %clos
  %app_lhs33 = alloca %clos
  %clos_fn_ptr34 = getelementptr inbounds %clos, %clos* %app_lhs33, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @"stringToMem'" to i8*), i8** %clos_fn_ptr34
  %malloccall35 = tail call i8* @malloc(i32 0)
  %env_aloc36 = bitcast i8* %malloccall35 to [0 x i8*]*
  %env37 = getelementptr inbounds %clos, %clos* %app_lhs33, i32 0, i32 1
  %env_ptr_raw38 = bitcast [0 x i8*]* %env_aloc36 to i8**
  store i8** %env_ptr_raw38, i8*** %env37
  %app_rhs39 = alloca i64
  store i64 0, i64* %app_rhs39
  %raw_app_rhs40 = bitcast i64* %app_rhs39 to i8*
  %raw_fn_ptr_ptr41 = getelementptr inbounds %clos, %clos* %app_lhs33, i32 0, i32 0
  %raw_fn_ptr42 = load i8*, i8** %raw_fn_ptr_ptr41
  %fn_ptr43 = bitcast i8* %raw_fn_ptr42 to %clos* (i8*, i8**)*
  %args_ptr44 = getelementptr inbounds %clos, %clos* %app_lhs33, i32 0, i32 1
  %args45 = load i8**, i8*** %args_ptr44
  %app_res_ptr46 = call %clos* %fn_ptr43(i8* %raw_app_rhs40, i8** %args45)
  %app_res47 = load %clos, %clos* %app_res_ptr46
  store %clos %app_res47, %clos* %app_lhs32
  %app_rhs48 = alloca %adt
  store %adt %cons_destruct29, %adt* %app_rhs48
  %raw_app_rhs49 = bitcast %adt* %app_rhs48 to i8*
  %raw_fn_ptr_ptr50 = getelementptr inbounds %clos, %clos* %app_lhs32, i32 0, i32 0
  %raw_fn_ptr51 = load i8*, i8** %raw_fn_ptr_ptr50
  %fn_ptr52 = bitcast i8* %raw_fn_ptr51 to %clos* (i8*, i8**)*
  %args_ptr53 = getelementptr inbounds %clos, %clos* %app_lhs32, i32 0, i32 1
  %args54 = load i8**, i8*** %args_ptr53
  %app_res_ptr55 = call %clos* %fn_ptr52(i8* %raw_app_rhs49, i8** %args54)
  %app_res56 = load %clos, %clos* %app_res_ptr55
  store %clos %app_res56, %clos* %app_lhs31
  %app_rhs57 = alloca %adt
  %app_lhs58 = alloca %clos
  %app_lhs59 = alloca %clos
  %app_lhs60 = alloca %clos
  %clos_fn_ptr61 = getelementptr inbounds %clos, %clos* %app_lhs60, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @__set_bit__ to i8*), i8** %clos_fn_ptr61
  %malloccall62 = tail call i8* @malloc(i32 0)
  %env_aloc63 = bitcast i8* %malloccall62 to [0 x i8*]*
  %env64 = getelementptr inbounds %clos, %clos* %app_lhs60, i32 0, i32 1
  %env_ptr_raw65 = bitcast [0 x i8*]* %env_aloc63 to i8**
  store i8** %env_ptr_raw65, i8*** %env64
  %app_rhs66 = alloca %adt
  %arg_gep_ptr67 = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr68 = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr67, i32 0, i32 0
  %raw_arg_ptr69 = load i8*, i8** %raw_arg_ptr_ptr68
  %arg_ptr70 = bitcast i8* %raw_arg_ptr69 to %adt*
  %arg71 = load %adt, %adt* %arg_ptr70
  store %adt %arg71, %adt* %app_rhs66
  %raw_app_rhs72 = bitcast %adt* %app_rhs66 to i8*
  %raw_fn_ptr_ptr73 = getelementptr inbounds %clos, %clos* %app_lhs60, i32 0, i32 0
  %raw_fn_ptr74 = load i8*, i8** %raw_fn_ptr_ptr73
  %fn_ptr75 = bitcast i8* %raw_fn_ptr74 to %clos* (i8*, i8**)*
  %args_ptr76 = getelementptr inbounds %clos, %clos* %app_lhs60, i32 0, i32 1
  %args77 = load i8**, i8*** %args_ptr76
  %app_res_ptr78 = call %clos* %fn_ptr75(i8* %raw_app_rhs72, i8** %args77)
  %app_res79 = load %clos, %clos* %app_res_ptr78
  store %clos %app_res79, %clos* %app_lhs59
  %app_rhs80 = alloca i64
  %arg_ptr81 = bitcast i8* %0 to i64*
  %arg82 = load i64, i64* %arg_ptr81
  store i64 %arg82, i64* %app_rhs80
  %raw_app_rhs83 = bitcast i64* %app_rhs80 to i8*
  %raw_fn_ptr_ptr84 = getelementptr inbounds %clos, %clos* %app_lhs59, i32 0, i32 0
  %raw_fn_ptr85 = load i8*, i8** %raw_fn_ptr_ptr84
  %fn_ptr86 = bitcast i8* %raw_fn_ptr85 to %clos* (i8*, i8**)*
  %args_ptr87 = getelementptr inbounds %clos, %clos* %app_lhs59, i32 0, i32 1
  %args88 = load i8**, i8*** %args_ptr87
  %app_res_ptr89 = call %clos* %fn_ptr86(i8* %raw_app_rhs83, i8** %args88)
  %app_res90 = load %clos, %clos* %app_res_ptr89
  store %clos %app_res90, %clos* %app_lhs58
  %app_rhs91 = alloca i8
  store i8 %cons_destruct, i8* %app_rhs91
  %raw_fn_ptr_ptr92 = getelementptr inbounds %clos, %clos* %app_lhs58, i32 0, i32 0
  %raw_fn_ptr93 = load i8*, i8** %raw_fn_ptr_ptr92
  %fn_ptr94 = bitcast i8* %raw_fn_ptr93 to %adt* (i8*, i8**)*
  %args_ptr95 = getelementptr inbounds %clos, %clos* %app_lhs58, i32 0, i32 1
  %args96 = load i8**, i8*** %args_ptr95
  %app_res_ptr97 = call %adt* %fn_ptr94(i8* %app_rhs91, i8** %args96)
  %app_res98 = load %adt, %adt* %app_res_ptr97
  store %adt %app_res98, %adt* %app_rhs57
  %raw_app_rhs99 = bitcast %adt* %app_rhs57 to i8*
  %raw_fn_ptr_ptr100 = getelementptr inbounds %clos, %clos* %app_lhs31, i32 0, i32 0
  %raw_fn_ptr101 = load i8*, i8** %raw_fn_ptr_ptr100
  %fn_ptr102 = bitcast i8* %raw_fn_ptr101 to %clos* (i8*, i8**)*
  %args_ptr103 = getelementptr inbounds %clos, %clos* %app_lhs31, i32 0, i32 1
  %args104 = load i8**, i8*** %args_ptr103
  %app_res_ptr105 = call %clos* %fn_ptr102(i8* %raw_app_rhs99, i8** %args104)
  %app_res106 = load %clos, %clos* %app_res_ptr105
  store %clos %app_res106, %clos* %app_lhs30
  %app_rhs107 = alloca i64
  %app_lhs108 = alloca %clos
  %app_lhs109 = alloca %clos
  %clos_fn_ptr110 = getelementptr inbounds %clos, %clos* %app_lhs109, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @__prim__plus to i8*), i8** %clos_fn_ptr110
  %malloccall111 = tail call i8* @malloc(i32 0)
  %env_aloc112 = bitcast i8* %malloccall111 to [0 x i8*]*
  %env113 = getelementptr inbounds %clos, %clos* %app_lhs109, i32 0, i32 1
  %env_ptr_raw114 = bitcast [0 x i8*]* %env_aloc112 to i8**
  store i8** %env_ptr_raw114, i8*** %env113
  %app_rhs115 = alloca i64
  %arg_ptr116 = bitcast i8* %0 to i64*
  %arg117 = load i64, i64* %arg_ptr116
  store i64 %arg117, i64* %app_rhs115
  %raw_app_rhs118 = bitcast i64* %app_rhs115 to i8*
  %raw_fn_ptr_ptr119 = getelementptr inbounds %clos, %clos* %app_lhs109, i32 0, i32 0
  %raw_fn_ptr120 = load i8*, i8** %raw_fn_ptr_ptr119
  %fn_ptr121 = bitcast i8* %raw_fn_ptr120 to %clos* (i8*, i8**)*
  %args_ptr122 = getelementptr inbounds %clos, %clos* %app_lhs109, i32 0, i32 1
  %args123 = load i8**, i8*** %args_ptr122
  %app_res_ptr124 = call %clos* %fn_ptr121(i8* %raw_app_rhs118, i8** %args123)
  %app_res125 = load %clos, %clos* %app_res_ptr124
  store %clos %app_res125, %clos* %app_lhs108
  %app_rhs126 = alloca i64
  store i64 1, i64* %app_rhs126
  %raw_app_rhs127 = bitcast i64* %app_rhs126 to i8*
  %raw_fn_ptr_ptr128 = getelementptr inbounds %clos, %clos* %app_lhs108, i32 0, i32 0
  %raw_fn_ptr129 = load i8*, i8** %raw_fn_ptr_ptr128
  %fn_ptr130 = bitcast i8* %raw_fn_ptr129 to i64* (i8*, i8**)*
  %args_ptr131 = getelementptr inbounds %clos, %clos* %app_lhs108, i32 0, i32 1
  %args132 = load i8**, i8*** %args_ptr131
  %app_res_ptr133 = call i64* %fn_ptr130(i8* %raw_app_rhs127, i8** %args132)
  %app_res134 = load i64, i64* %app_res_ptr133
  store i64 %app_res134, i64* %app_rhs107
  %raw_app_rhs135 = bitcast i64* %app_rhs107 to i8*
  %raw_fn_ptr_ptr136 = getelementptr inbounds %clos, %clos* %app_lhs30, i32 0, i32 0
  %raw_fn_ptr137 = load i8*, i8** %raw_fn_ptr_ptr136
  %fn_ptr138 = bitcast i8* %raw_fn_ptr137 to %adt* (i8*, i8**)*
  %args_ptr139 = getelementptr inbounds %clos, %clos* %app_lhs30, i32 0, i32 1
  %args140 = load i8**, i8*** %args_ptr139
  %app_res_ptr141 = call %adt* %fn_ptr138(i8* %raw_app_rhs135, i8** %args140)
  %app_res142 = load %adt, %adt* %app_res_ptr141
  store %adt %app_res142, %adt* %rval_ptr
  br label %case_continue

case_continue:                                    ; preds = %case, %default
  ret %adt* %rval_ptr
}

define %clos* @fn_stringToMem(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @fn_stringToMem1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to %adt*
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %closarg_ptr
  %raw_arg_ptr = bitcast %adt* %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %adt* @fn_stringToMem1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %app_lhs = alloca %clos
  %app_lhs1 = alloca %clos
  %app_lhs2 = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @alloc to i8*), i8** %clos_fn_ptr
  %malloccall3 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall3 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs = alloca i64
  store i64 0, i64* %app_rhs
  %raw_app_rhs = bitcast i64* %app_rhs to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %clos* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %clos* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %clos, %clos* %app_res_ptr
  store %clos %app_res, %clos* %app_lhs1
  %app_rhs4 = alloca i64
  %app_lhs5 = alloca %clos
  %app_lhs6 = alloca %clos
  %clos_fn_ptr7 = getelementptr inbounds %clos, %clos* %app_lhs6, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @__prim__plus to i8*), i8** %clos_fn_ptr7
  %malloccall8 = tail call i8* @malloc(i32 0)
  %env_aloc9 = bitcast i8* %malloccall8 to [0 x i8*]*
  %env10 = getelementptr inbounds %clos, %clos* %app_lhs6, i32 0, i32 1
  %env_ptr_raw11 = bitcast [0 x i8*]* %env_aloc9 to i8**
  store i8** %env_ptr_raw11, i8*** %env10
  %app_rhs12 = alloca i64
  store i64 1, i64* %app_rhs12
  %raw_app_rhs13 = bitcast i64* %app_rhs12 to i8*
  %raw_fn_ptr_ptr14 = getelementptr inbounds %clos, %clos* %app_lhs6, i32 0, i32 0
  %raw_fn_ptr15 = load i8*, i8** %raw_fn_ptr_ptr14
  %fn_ptr16 = bitcast i8* %raw_fn_ptr15 to %clos* (i8*, i8**)*
  %args_ptr17 = getelementptr inbounds %clos, %clos* %app_lhs6, i32 0, i32 1
  %args18 = load i8**, i8*** %args_ptr17
  %app_res_ptr19 = call %clos* %fn_ptr16(i8* %raw_app_rhs13, i8** %args18)
  %app_res20 = load %clos, %clos* %app_res_ptr19
  store %clos %app_res20, %clos* %app_lhs5
  %app_rhs21 = alloca i64
  %app_lhs22 = alloca %clos
  %app_lhs23 = alloca %clos
  %clos_fn_ptr24 = getelementptr inbounds %clos, %clos* %app_lhs23, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @len to i8*), i8** %clos_fn_ptr24
  %malloccall25 = tail call i8* @malloc(i32 0)
  %env_aloc26 = bitcast i8* %malloccall25 to [0 x i8*]*
  %env27 = getelementptr inbounds %clos, %clos* %app_lhs23, i32 0, i32 1
  %env_ptr_raw28 = bitcast [0 x i8*]* %env_aloc26 to i8**
  store i8** %env_ptr_raw28, i8*** %env27
  %app_rhs29 = alloca i64
  store i64 0, i64* %app_rhs29
  %raw_app_rhs30 = bitcast i64* %app_rhs29 to i8*
  %raw_fn_ptr_ptr31 = getelementptr inbounds %clos, %clos* %app_lhs23, i32 0, i32 0
  %raw_fn_ptr32 = load i8*, i8** %raw_fn_ptr_ptr31
  %fn_ptr33 = bitcast i8* %raw_fn_ptr32 to %clos* (i8*, i8**)*
  %args_ptr34 = getelementptr inbounds %clos, %clos* %app_lhs23, i32 0, i32 1
  %args35 = load i8**, i8*** %args_ptr34
  %app_res_ptr36 = call %clos* %fn_ptr33(i8* %raw_app_rhs30, i8** %args35)
  %app_res37 = load %clos, %clos* %app_res_ptr36
  store %clos %app_res37, %clos* %app_lhs22
  %app_rhs38 = alloca %adt
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %app_rhs38
  %raw_app_rhs39 = bitcast %adt* %app_rhs38 to i8*
  %raw_fn_ptr_ptr40 = getelementptr inbounds %clos, %clos* %app_lhs22, i32 0, i32 0
  %raw_fn_ptr41 = load i8*, i8** %raw_fn_ptr_ptr40
  %fn_ptr42 = bitcast i8* %raw_fn_ptr41 to i64* (i8*, i8**)*
  %args_ptr43 = getelementptr inbounds %clos, %clos* %app_lhs22, i32 0, i32 1
  %args44 = load i8**, i8*** %args_ptr43
  %app_res_ptr45 = call i64* %fn_ptr42(i8* %raw_app_rhs39, i8** %args44)
  %app_res46 = load i64, i64* %app_res_ptr45
  store i64 %app_res46, i64* %app_rhs21
  %raw_app_rhs47 = bitcast i64* %app_rhs21 to i8*
  %raw_fn_ptr_ptr48 = getelementptr inbounds %clos, %clos* %app_lhs5, i32 0, i32 0
  %raw_fn_ptr49 = load i8*, i8** %raw_fn_ptr_ptr48
  %fn_ptr50 = bitcast i8* %raw_fn_ptr49 to i64* (i8*, i8**)*
  %args_ptr51 = getelementptr inbounds %clos, %clos* %app_lhs5, i32 0, i32 1
  %args52 = load i8**, i8*** %args_ptr51
  %app_res_ptr53 = call i64* %fn_ptr50(i8* %raw_app_rhs47, i8** %args52)
  %app_res54 = load i64, i64* %app_res_ptr53
  store i64 %app_res54, i64* %app_rhs4
  %raw_app_rhs55 = bitcast i64* %app_rhs4 to i8*
  %raw_fn_ptr_ptr56 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  %raw_fn_ptr57 = load i8*, i8** %raw_fn_ptr_ptr56
  %fn_ptr58 = bitcast i8* %raw_fn_ptr57 to %clos* (i8*, i8**)*
  %args_ptr59 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %args60 = load i8**, i8*** %args_ptr59
  %app_res_ptr61 = call %clos* %fn_ptr58(i8* %raw_app_rhs55, i8** %args60)
  %app_res62 = load %clos, %clos* %app_res_ptr61
  store %clos %app_res62, %clos* %app_lhs
  %app_rhs63 = alloca %clos
  %clos_fn_ptr64 = getelementptr inbounds %clos, %clos* %app_rhs63, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @fn_stringToMem2 to i8*), i8** %clos_fn_ptr64
  %malloccall65 = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %env_aloc66 = bitcast i8* %malloccall65 to [2 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [2 x i8*], [2 x i8*]* %env_aloc66, i32 0, i32 0
  %malloccall67 = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %closarg_ptr = bitcast i8* %malloccall67 to %clos*
  %arg_ptr68 = bitcast i8* %0 to %clos*
  %arg69 = load %clos, %clos* %arg_ptr68
  store %clos %arg69, %clos* %closarg_ptr
  %raw_arg_ptr70 = bitcast %clos* %closarg_ptr to i8*
  store i8* %raw_arg_ptr70, i8** %raw_closarg_ptr_ptr
  %raw_closarg_ptr_ptr71 = getelementptr inbounds [2 x i8*], [2 x i8*]* %env_aloc66, i32 0, i32 1
  %malloccall72 = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %closarg_ptr73 = bitcast i8* %malloccall72 to %adt*
  %arg_gep_ptr74 = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr75 = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr74, i32 0, i32 0
  %raw_arg_ptr76 = load i8*, i8** %raw_arg_ptr_ptr75
  %arg_ptr77 = bitcast i8* %raw_arg_ptr76 to %adt*
  %arg78 = load %adt, %adt* %arg_ptr77
  store %adt %arg78, %adt* %closarg_ptr73
  %raw_arg_ptr79 = bitcast %adt* %closarg_ptr73 to i8*
  store i8* %raw_arg_ptr79, i8** %raw_closarg_ptr_ptr71
  %env80 = getelementptr inbounds %clos, %clos* %app_rhs63, i32 0, i32 1
  %env_ptr_raw81 = bitcast [2 x i8*]* %env_aloc66 to i8**
  store i8** %env_ptr_raw81, i8*** %env80
  %raw_app_rhs82 = bitcast %clos* %app_rhs63 to i8*
  %raw_fn_ptr_ptr83 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr84 = load i8*, i8** %raw_fn_ptr_ptr83
  %fn_ptr85 = bitcast i8* %raw_fn_ptr84 to %adt* (i8*, i8**)*
  %args_ptr86 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args87 = load i8**, i8*** %args_ptr86
  %app_res_ptr88 = call %adt* %fn_ptr85(i8* %raw_app_rhs82, i8** %args87)
  %app_res89 = load %adt, %adt* %app_res_ptr88
  store %adt %app_res89, %adt* %rval_ptr
  ret %adt* %rval_ptr
}

define %adt* @fn_stringToMem2(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %app_lhs = alloca %clos
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to %clos*
  %arg = load %clos, %clos* %arg_ptr
  store %clos %arg, %clos* %app_lhs
  %app_rhs = alloca %adt
  %app_lhs1 = alloca %clos
  %app_lhs2 = alloca %clos
  %app_lhs3 = alloca %clos
  %app_lhs4 = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @"stringToMem'" to i8*), i8** %clos_fn_ptr
  %malloccall5 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall5 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs6 = alloca i64
  store i64 0, i64* %app_rhs6
  %raw_app_rhs = bitcast i64* %app_rhs6 to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %clos* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %clos* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %clos, %clos* %app_res_ptr
  store %clos %app_res, %clos* %app_lhs3
  %app_rhs7 = alloca %adt
  %arg_gep_ptr8 = bitcast i8** %1 to [2 x i8*]*
  %raw_arg_ptr_ptr9 = getelementptr [2 x i8*], [2 x i8*]* %arg_gep_ptr8, i32 0, i32 1
  %raw_arg_ptr10 = load i8*, i8** %raw_arg_ptr_ptr9
  %arg_ptr11 = bitcast i8* %raw_arg_ptr10 to %adt*
  %arg12 = load %adt, %adt* %arg_ptr11
  store %adt %arg12, %adt* %app_rhs7
  %raw_app_rhs13 = bitcast %adt* %app_rhs7 to i8*
  %raw_fn_ptr_ptr14 = getelementptr inbounds %clos, %clos* %app_lhs3, i32 0, i32 0
  %raw_fn_ptr15 = load i8*, i8** %raw_fn_ptr_ptr14
  %fn_ptr16 = bitcast i8* %raw_fn_ptr15 to %clos* (i8*, i8**)*
  %args_ptr17 = getelementptr inbounds %clos, %clos* %app_lhs3, i32 0, i32 1
  %args18 = load i8**, i8*** %args_ptr17
  %app_res_ptr19 = call %clos* %fn_ptr16(i8* %raw_app_rhs13, i8** %args18)
  %app_res20 = load %clos, %clos* %app_res_ptr19
  store %clos %app_res20, %clos* %app_lhs2
  %app_rhs21 = alloca %adt
  %arg_ptr22 = bitcast i8* %0 to %adt*
  %arg23 = load %adt, %adt* %arg_ptr22
  store %adt %arg23, %adt* %app_rhs21
  %raw_app_rhs24 = bitcast %adt* %app_rhs21 to i8*
  %raw_fn_ptr_ptr25 = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 0
  %raw_fn_ptr26 = load i8*, i8** %raw_fn_ptr_ptr25
  %fn_ptr27 = bitcast i8* %raw_fn_ptr26 to %clos* (i8*, i8**)*
  %args_ptr28 = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 1
  %args29 = load i8**, i8*** %args_ptr28
  %app_res_ptr30 = call %clos* %fn_ptr27(i8* %raw_app_rhs24, i8** %args29)
  %app_res31 = load %clos, %clos* %app_res_ptr30
  store %clos %app_res31, %clos* %app_lhs1
  %app_rhs32 = alloca i64
  store i64 0, i64* %app_rhs32
  %raw_app_rhs33 = bitcast i64* %app_rhs32 to i8*
  %raw_fn_ptr_ptr34 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  %raw_fn_ptr35 = load i8*, i8** %raw_fn_ptr_ptr34
  %fn_ptr36 = bitcast i8* %raw_fn_ptr35 to %adt* (i8*, i8**)*
  %args_ptr37 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %args38 = load i8**, i8*** %args_ptr37
  %app_res_ptr39 = call %adt* %fn_ptr36(i8* %raw_app_rhs33, i8** %args38)
  %app_res40 = load %adt, %adt* %app_res_ptr39
  store %adt %app_res40, %adt* %app_rhs
  %raw_app_rhs41 = bitcast %adt* %app_rhs to i8*
  %raw_fn_ptr_ptr42 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr43 = load i8*, i8** %raw_fn_ptr_ptr42
  %fn_ptr44 = bitcast i8* %raw_fn_ptr43 to %adt* (i8*, i8**)*
  %args_ptr45 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args46 = load i8**, i8*** %args_ptr45
  %app_res_ptr47 = call %adt* %fn_ptr44(i8* %raw_app_rhs41, i8** %args46)
  %app_res48 = load %adt, %adt* %app_res_ptr47
  store %adt %app_res48, %adt* %rval_ptr
  ret %adt* %rval_ptr
}

define %adt* @fn_printAndDrop(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %app_lhs = alloca %clos
  %app_lhs1 = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @drop to i8*), i8** %clos_fn_ptr
  %malloccall2 = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall2 to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs = alloca i64
  store i64 0, i64* %app_rhs
  %raw_app_rhs = bitcast i64* %app_rhs to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %clos* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %clos* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %clos, %clos* %app_res_ptr
  store %clos %app_res, %clos* %app_lhs
  %app_rhs3 = alloca %adt
  %app_lhs4 = alloca %clos
  %clos_fn_ptr5 = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @__print_string__ to i8*), i8** %clos_fn_ptr5
  %malloccall6 = tail call i8* @malloc(i32 0)
  %env_aloc7 = bitcast i8* %malloccall6 to [0 x i8*]*
  %env8 = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 1
  %env_ptr_raw9 = bitcast [0 x i8*]* %env_aloc7 to i8**
  store i8** %env_ptr_raw9, i8*** %env8
  %app_rhs10 = alloca %adt
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg = load %adt, %adt* %arg_ptr
  store %adt %arg, %adt* %app_rhs10
  %raw_app_rhs11 = bitcast %adt* %app_rhs10 to i8*
  %raw_fn_ptr_ptr12 = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 0
  %raw_fn_ptr13 = load i8*, i8** %raw_fn_ptr_ptr12
  %fn_ptr14 = bitcast i8* %raw_fn_ptr13 to %adt* (i8*, i8**)*
  %args_ptr15 = getelementptr inbounds %clos, %clos* %app_lhs4, i32 0, i32 1
  %args16 = load i8**, i8*** %args_ptr15
  %app_res_ptr17 = call %adt* %fn_ptr14(i8* %raw_app_rhs11, i8** %args16)
  %app_res18 = load %adt, %adt* %app_res_ptr17
  store %adt %app_res18, %adt* %app_rhs3
  %raw_app_rhs19 = bitcast %adt* %app_rhs3 to i8*
  %raw_fn_ptr_ptr20 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr21 = load i8*, i8** %raw_fn_ptr_ptr20
  %fn_ptr22 = bitcast i8* %raw_fn_ptr21 to %adt* (i8*, i8**)*
  %args_ptr23 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args24 = load i8**, i8*** %args_ptr23
  %app_res_ptr25 = call %adt* %fn_ptr22(i8* %raw_app_rhs19, i8** %args24)
  %app_res26 = load %adt, %adt* %app_res_ptr25
  store %adt %app_res26, %adt* %rval_ptr
  ret %adt* %rval_ptr
}

define %clos* @fn_const(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (i8** (i8*, i8**)* @fn_const1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %closarg_ptr = bitcast i8* %malloccall2 to i8**
  %arg_ptr = bitcast i8* %0 to i8**
  %arg = load i8*, i8** %arg_ptr
  store i8* %arg, i8** %closarg_ptr
  %raw_arg_ptr = bitcast i8** %closarg_ptr to i8*
  store i8* %raw_arg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define i8** @fn_const1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to i8**
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg_ptr = bitcast i8* %raw_arg_ptr to i8**
  %arg = load i8*, i8** %arg_ptr
  store i8* %arg, i8** %rval_ptr
  ret i8** %rval_ptr
}

define %clos* @C(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %rval_ptr = bitcast i8* %malloccall to %clos*
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 0
  store i8* bitcast (%adt* (i8*, i8**)* @C1 to i8*), i8** %clos_fn_ptr
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %env_aloc = bitcast i8* %malloccall1 to [1 x i8*]*
  %raw_closarg_ptr_ptr = getelementptr inbounds [1 x i8*], [1 x i8*]* %env_aloc, i32 0, i32 0
  %closarg_ptr = tail call i8* @malloc(i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32))
  %arg = load i8, i8* %0
  store i8 %arg, i8* %closarg_ptr
  store i8* %closarg_ptr, i8** %raw_closarg_ptr_ptr
  %env = getelementptr inbounds %clos, %clos* %rval_ptr, i32 0, i32 1
  %env_ptr_raw = bitcast [1 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  ret %clos* %rval_ptr
}

define %adt* @C1(i8* %0, i8** %1) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %rval_ptr = bitcast i8* %malloccall to %adt*
  %carg_aloc = tail call i8* @malloc(i32 ptrtoint (i8* getelementptr (i8, i8* null, i32 1) to i32))
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%adt* getelementptr (%adt, %adt* null, i32 1) to i32))
  %carg_aloc3 = bitcast i8* %malloccall2 to %adt*
  %arg_gep_ptr = bitcast i8** %1 to [1 x i8*]*
  %raw_arg_ptr_ptr = getelementptr [1 x i8*], [1 x i8*]* %arg_gep_ptr, i32 0, i32 0
  %raw_arg_ptr = load i8*, i8** %raw_arg_ptr_ptr
  %arg = load i8, i8* %raw_arg_ptr
  store i8 %arg, i8* %carg_aloc
  %arg_ptr = bitcast i8* %0 to %adt*
  %arg4 = load %adt, %adt* %arg_ptr
  store %adt %arg4, %adt* %carg_aloc3
  %malloccall5 = tail call i8* @malloc(i32 ptrtoint (%C* getelementptr (%C, %C* null, i32 1) to i32))
  %cons = bitcast i8* %malloccall5 to %C*
  %carg_aloc_val = load i8, i8* %carg_aloc
  %carg = getelementptr inbounds %C, %C* %cons, i32 0, i32 0
  store i8 %carg_aloc_val, i8* %carg
  %carg_aloc_val6 = load %adt, %adt* %carg_aloc3
  %carg7 = getelementptr inbounds %C, %C* %cons, i32 0, i32 1
  store %adt %carg_aloc_val6, %adt* %carg7
  %cons_vptr = bitcast %C* %cons to i8*
  %tag = getelementptr inbounds %adt, %adt* %rval_ptr, i32 0, i32 0
  %data_ptr = getelementptr inbounds %adt, %adt* %rval_ptr, i32 0, i32 1
  store i64 1, i64* %tag
  store i8* %cons_vptr, i8** %data_ptr
  ret %adt* %rval_ptr
}

declare i1 @__prim__unop__not(i1)

declare i64 @__prim__unop__neg(i64)

declare i1 @__prim__binop__or(i1, i1)

declare i1 @__prim__binop__and(i1, i1)

declare i1 @__prim__binop__neq(i64, i64)

declare i1 @__prim__binop__lt(i64, i64)

declare i1 @__prim__binop__leq(i64, i64)

declare i1 @__prim__binop__eq(i64, i64)

declare i1 @__prim__binop__gt(i64, i64)

declare i1 @__prim__binop__geq(i64, i64)

declare i64 @__prim__binop__divide(i64, i64)

declare i64 @__prim__binop__times(i64, i64)

declare i64 @__prim__binop__minus(i64, i64)

declare i64 @__prim__binop__plus(i64, i64)

declare %adt @set_bit(%adt, i64, i8)

declare i64 @print_int(i64)

declare %adt @print_string(%adt)

declare %adt @prim_drop(%adt)

declare %adt @prim_alloc(i64)

declare noalias i8* @malloc(i32)

define i64 @main() {
entry:
  %ret = alloca i64
  %boxed = alloca i8*
  %app_lhs = alloca %clos
  %app_lhs1 = alloca %clos
  %app_lhs2 = alloca %clos
  %clos_fn_ptr = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @const to i8*), i8** %clos_fn_ptr
  %malloccall = tail call i8* @malloc(i32 0)
  %env_aloc = bitcast i8* %malloccall to [0 x i8*]*
  %env = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 1
  %env_ptr_raw = bitcast [0 x i8*]* %env_aloc to i8**
  store i8** %env_ptr_raw, i8*** %env
  %app_rhs = alloca i64
  store i64 0, i64* %app_rhs
  %raw_app_rhs = bitcast i64* %app_rhs to i8*
  %raw_fn_ptr_ptr = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 0
  %raw_fn_ptr = load i8*, i8** %raw_fn_ptr_ptr
  %fn_ptr = bitcast i8* %raw_fn_ptr to %clos* (i8*, i8**)*
  %args_ptr = getelementptr inbounds %clos, %clos* %app_lhs2, i32 0, i32 1
  %args = load i8**, i8*** %args_ptr
  %app_res_ptr = call %clos* %fn_ptr(i8* %raw_app_rhs, i8** %args)
  %app_res = load %clos, %clos* %app_res_ptr
  store %clos %app_res, %clos* %app_lhs1
  %app_rhs3 = alloca i8*
  %unbox = alloca i64
  store i64 0, i64* %unbox
  %box = bitcast i64* %unbox to i8*
  store i8* %box, i8** %app_rhs3
  %raw_app_rhs4 = bitcast i8** %app_rhs3 to i8*
  %raw_fn_ptr_ptr5 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 0
  %raw_fn_ptr6 = load i8*, i8** %raw_fn_ptr_ptr5
  %fn_ptr7 = bitcast i8* %raw_fn_ptr6 to %clos* (i8*, i8**)*
  %args_ptr8 = getelementptr inbounds %clos, %clos* %app_lhs1, i32 0, i32 1
  %args9 = load i8**, i8*** %args_ptr8
  %app_res_ptr10 = call %clos* %fn_ptr7(i8* %raw_app_rhs4, i8** %args9)
  %app_res11 = load %clos, %clos* %app_res_ptr10
  store %clos %app_res11, %clos* %app_lhs
  %app_rhs12 = alloca i8*
  %unbox13 = alloca %adt
  %app_lhs14 = alloca %clos
  %app_lhs15 = alloca %clos
  %app_lhs16 = alloca %clos
  %clos_fn_ptr17 = getelementptr inbounds %clos, %clos* %app_lhs16, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @stringToMem to i8*), i8** %clos_fn_ptr17
  %malloccall18 = tail call i8* @malloc(i32 0)
  %env_aloc19 = bitcast i8* %malloccall18 to [0 x i8*]*
  %env20 = getelementptr inbounds %clos, %clos* %app_lhs16, i32 0, i32 1
  %env_ptr_raw21 = bitcast [0 x i8*]* %env_aloc19 to i8**
  store i8** %env_ptr_raw21, i8*** %env20
  %app_rhs22 = alloca i64
  store i64 0, i64* %app_rhs22
  %raw_app_rhs23 = bitcast i64* %app_rhs22 to i8*
  %raw_fn_ptr_ptr24 = getelementptr inbounds %clos, %clos* %app_lhs16, i32 0, i32 0
  %raw_fn_ptr25 = load i8*, i8** %raw_fn_ptr_ptr24
  %fn_ptr26 = bitcast i8* %raw_fn_ptr25 to %clos* (i8*, i8**)*
  %args_ptr27 = getelementptr inbounds %clos, %clos* %app_lhs16, i32 0, i32 1
  %args28 = load i8**, i8*** %args_ptr27
  %app_res_ptr29 = call %clos* %fn_ptr26(i8* %raw_app_rhs23, i8** %args28)
  %app_res30 = load %clos, %clos* %app_res_ptr29
  store %clos %app_res30, %clos* %app_lhs15
  %app_rhs31 = alloca %adt
  %app_lhs32 = alloca %clos
  %app_lhs33 = alloca %clos
  %clos_fn_ptr34 = getelementptr inbounds %clos, %clos* %app_lhs33, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @C to i8*), i8** %clos_fn_ptr34
  %malloccall35 = tail call i8* @malloc(i32 0)
  %env_aloc36 = bitcast i8* %malloccall35 to [0 x i8*]*
  %env37 = getelementptr inbounds %clos, %clos* %app_lhs33, i32 0, i32 1
  %env_ptr_raw38 = bitcast [0 x i8*]* %env_aloc36 to i8**
  store i8** %env_ptr_raw38, i8*** %env37
  %app_rhs39 = alloca i8
  store i8 104, i8* %app_rhs39
  %raw_fn_ptr_ptr40 = getelementptr inbounds %clos, %clos* %app_lhs33, i32 0, i32 0
  %raw_fn_ptr41 = load i8*, i8** %raw_fn_ptr_ptr40
  %fn_ptr42 = bitcast i8* %raw_fn_ptr41 to %clos* (i8*, i8**)*
  %args_ptr43 = getelementptr inbounds %clos, %clos* %app_lhs33, i32 0, i32 1
  %args44 = load i8**, i8*** %args_ptr43
  %app_res_ptr45 = call %clos* %fn_ptr42(i8* %app_rhs39, i8** %args44)
  %app_res46 = load %clos, %clos* %app_res_ptr45
  store %clos %app_res46, %clos* %app_lhs32
  %app_rhs47 = alloca %adt
  %app_lhs48 = alloca %clos
  %app_lhs49 = alloca %clos
  %clos_fn_ptr50 = getelementptr inbounds %clos, %clos* %app_lhs49, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @C to i8*), i8** %clos_fn_ptr50
  %malloccall51 = tail call i8* @malloc(i32 0)
  %env_aloc52 = bitcast i8* %malloccall51 to [0 x i8*]*
  %env53 = getelementptr inbounds %clos, %clos* %app_lhs49, i32 0, i32 1
  %env_ptr_raw54 = bitcast [0 x i8*]* %env_aloc52 to i8**
  store i8** %env_ptr_raw54, i8*** %env53
  %app_rhs55 = alloca i8
  store i8 105, i8* %app_rhs55
  %raw_fn_ptr_ptr56 = getelementptr inbounds %clos, %clos* %app_lhs49, i32 0, i32 0
  %raw_fn_ptr57 = load i8*, i8** %raw_fn_ptr_ptr56
  %fn_ptr58 = bitcast i8* %raw_fn_ptr57 to %clos* (i8*, i8**)*
  %args_ptr59 = getelementptr inbounds %clos, %clos* %app_lhs49, i32 0, i32 1
  %args60 = load i8**, i8*** %args_ptr59
  %app_res_ptr61 = call %clos* %fn_ptr58(i8* %app_rhs55, i8** %args60)
  %app_res62 = load %clos, %clos* %app_res_ptr61
  store %clos %app_res62, %clos* %app_lhs48
  %app_rhs63 = alloca %adt
  %malloccall64 = tail call i8* @malloc(i32 0)
  %cons = bitcast i8* %malloccall64 to %E*
  %cons_vptr = bitcast %E* %cons to i8*
  %tag = getelementptr inbounds %adt, %adt* %app_rhs63, i32 0, i32 0
  %data_ptr = getelementptr inbounds %adt, %adt* %app_rhs63, i32 0, i32 1
  store i64 0, i64* %tag
  store i8* %cons_vptr, i8** %data_ptr
  %raw_app_rhs65 = bitcast %adt* %app_rhs63 to i8*
  %raw_fn_ptr_ptr66 = getelementptr inbounds %clos, %clos* %app_lhs48, i32 0, i32 0
  %raw_fn_ptr67 = load i8*, i8** %raw_fn_ptr_ptr66
  %fn_ptr68 = bitcast i8* %raw_fn_ptr67 to %adt* (i8*, i8**)*
  %args_ptr69 = getelementptr inbounds %clos, %clos* %app_lhs48, i32 0, i32 1
  %args70 = load i8**, i8*** %args_ptr69
  %app_res_ptr71 = call %adt* %fn_ptr68(i8* %raw_app_rhs65, i8** %args70)
  %app_res72 = load %adt, %adt* %app_res_ptr71
  store %adt %app_res72, %adt* %app_rhs47
  %raw_app_rhs73 = bitcast %adt* %app_rhs47 to i8*
  %raw_fn_ptr_ptr74 = getelementptr inbounds %clos, %clos* %app_lhs32, i32 0, i32 0
  %raw_fn_ptr75 = load i8*, i8** %raw_fn_ptr_ptr74
  %fn_ptr76 = bitcast i8* %raw_fn_ptr75 to %adt* (i8*, i8**)*
  %args_ptr77 = getelementptr inbounds %clos, %clos* %app_lhs32, i32 0, i32 1
  %args78 = load i8**, i8*** %args_ptr77
  %app_res_ptr79 = call %adt* %fn_ptr76(i8* %raw_app_rhs73, i8** %args78)
  %app_res80 = load %adt, %adt* %app_res_ptr79
  store %adt %app_res80, %adt* %app_rhs31
  %raw_app_rhs81 = bitcast %adt* %app_rhs31 to i8*
  %raw_fn_ptr_ptr82 = getelementptr inbounds %clos, %clos* %app_lhs15, i32 0, i32 0
  %raw_fn_ptr83 = load i8*, i8** %raw_fn_ptr_ptr82
  %fn_ptr84 = bitcast i8* %raw_fn_ptr83 to %clos* (i8*, i8**)*
  %args_ptr85 = getelementptr inbounds %clos, %clos* %app_lhs15, i32 0, i32 1
  %args86 = load i8**, i8*** %args_ptr85
  %app_res_ptr87 = call %clos* %fn_ptr84(i8* %raw_app_rhs81, i8** %args86)
  %app_res88 = load %clos, %clos* %app_res_ptr87
  store %clos %app_res88, %clos* %app_lhs14
  %app_rhs89 = alloca %clos
  %app_lhs90 = alloca %clos
  %clos_fn_ptr91 = getelementptr inbounds %clos, %clos* %app_lhs90, i32 0, i32 0
  store i8* bitcast (%clos* (i8*, i8**)* @printAndDrop to i8*), i8** %clos_fn_ptr91
  %malloccall92 = tail call i8* @malloc(i32 0)
  %env_aloc93 = bitcast i8* %malloccall92 to [0 x i8*]*
  %env94 = getelementptr inbounds %clos, %clos* %app_lhs90, i32 0, i32 1
  %env_ptr_raw95 = bitcast [0 x i8*]* %env_aloc93 to i8**
  store i8** %env_ptr_raw95, i8*** %env94
  %app_rhs96 = alloca i64
  store i64 0, i64* %app_rhs96
  %raw_app_rhs97 = bitcast i64* %app_rhs96 to i8*
  %raw_fn_ptr_ptr98 = getelementptr inbounds %clos, %clos* %app_lhs90, i32 0, i32 0
  %raw_fn_ptr99 = load i8*, i8** %raw_fn_ptr_ptr98
  %fn_ptr100 = bitcast i8* %raw_fn_ptr99 to %clos* (i8*, i8**)*
  %args_ptr101 = getelementptr inbounds %clos, %clos* %app_lhs90, i32 0, i32 1
  %args102 = load i8**, i8*** %args_ptr101
  %app_res_ptr103 = call %clos* %fn_ptr100(i8* %raw_app_rhs97, i8** %args102)
  %app_res104 = load %clos, %clos* %app_res_ptr103
  store %clos %app_res104, %clos* %app_rhs89
  %raw_app_rhs105 = bitcast %clos* %app_rhs89 to i8*
  %raw_fn_ptr_ptr106 = getelementptr inbounds %clos, %clos* %app_lhs14, i32 0, i32 0
  %raw_fn_ptr107 = load i8*, i8** %raw_fn_ptr_ptr106
  %fn_ptr108 = bitcast i8* %raw_fn_ptr107 to %adt* (i8*, i8**)*
  %args_ptr109 = getelementptr inbounds %clos, %clos* %app_lhs14, i32 0, i32 1
  %args110 = load i8**, i8*** %args_ptr109
  %app_res_ptr111 = call %adt* %fn_ptr108(i8* %raw_app_rhs105, i8** %args110)
  %app_res112 = load %adt, %adt* %app_res_ptr111
  store %adt %app_res112, %adt* %unbox13
  %box113 = bitcast %adt* %unbox13 to i8*
  store i8* %box113, i8** %app_rhs12
  %raw_app_rhs114 = bitcast i8** %app_rhs12 to i8*
  %raw_fn_ptr_ptr115 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 0
  %raw_fn_ptr116 = load i8*, i8** %raw_fn_ptr_ptr115
  %fn_ptr117 = bitcast i8* %raw_fn_ptr116 to i8** (i8*, i8**)*
  %args_ptr118 = getelementptr inbounds %clos, %clos* %app_lhs, i32 0, i32 1
  %args119 = load i8**, i8*** %args_ptr118
  %app_res_ptr120 = call i8** %fn_ptr117(i8* %raw_app_rhs114, i8** %args119)
  %app_res121 = load i8*, i8** %app_res_ptr120
  store i8* %app_res121, i8** %boxed
  %unbox_ptr_ptr = bitcast i8** %boxed to i64**
  %unbox_ptr = load i64*, i64** %unbox_ptr_ptr
  %unbox_val = load i64, i64* %unbox_ptr
  store i64 %unbox_val, i64* %ret
  %retval = load i64, i64* %ret
  ret i64 %retval
}

